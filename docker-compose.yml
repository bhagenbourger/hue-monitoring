version: '3'
services:
  create_certs:
      container_name: create_certs
      image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
      command: >
        bash -c '
          if [[ ! -f /certs/bundle.zip ]]; then
            bin/elasticsearch-certutil cert --silent --pem --in config/certificates/instances.yml -out /certs/bundle.zip;
            unzip /certs/bundle.zip -d /certs;
          fi;
          chown -R 1000:0 /certs
        '
      user: "0"
      working_dir: /usr/share/elasticsearch
      volumes: ['certs:/certs', './inventory:/usr/share/elasticsearch/config/certificates']

  elasticsearch01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    environment:
      - node.name=elasticsearch01
      - cluster.name=docker-cluster
      - discovery.seed_hosts=elasticsearch02:9300
      - cluster.initial_master_nodes=elasticsearch01,elasticsearch02
      - bootstrap.memory_lock=true
      - path.repo=/usr/share/elasticsearch/data
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/elasticsearch01/elasticsearch01.key
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/elasticsearch01/elasticsearch01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/elasticsearch01/elasticsearch01.crt
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/elasticsearch01/elasticsearch01.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES01_DATA_FOLDER}:/usr/share/elasticsearch/data
      - certs:/usr/share/elasticsearch/config/certificates
    ports: 
      - '9201:9200'
    networks:
      - 'elk'
    depends_on:
      - create_certs

  elasticsearch02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    environment:
      - node.name=elasticsearch02
      - cluster.name=docker-cluster
      - discovery.seed_hosts=elasticsearch01:9300
      - cluster.initial_master_nodes=elasticsearch01,elasticsearch02
      - bootstrap.memory_lock=true
      - path.repo=/usr/share/elasticsearch/data
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/elasticsearch02/elasticsearch02.key
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/elasticsearch02/elasticsearch02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/elasticsearch02/elasticsearch02.crt
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/elasticsearch02/elasticsearch02.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES02_DATA_FOLDER}:/usr/share/elasticsearch/data
      - certs:/usr/share/elasticsearch/config/certificates
    ports:
      - '9202:9200'
    networks:
      - 'elk'
    depends_on:
      - create_certs

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    environment:
      - ELASTICSEARCH_HOSTS=["https://elasticsearch01:9200","https://elasticsearch02:9200"]
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certificates/ca/ca.crt
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
    volumes:
      - certs:/usr/share/kibana/config/certificates
    ports:
      - '5601:5601'
    networks:
      - 'elk'
    depends_on:
      - create_certs
      - elasticsearch01
      - elasticsearch02

  metricbeat:
    image: docker.elastic.co/beats/metricbeat-oss:7.14.1
    volumes:
      - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
    environment:
      - HUE_HUB_IP=${HUE_HUB_IP}
      - HUE_API_KEY=${HUE_API_KEY}
    networks:
      - 'elk'
    depends_on:
      - logstash

  logstash:
    build: 
      context: ./logstash
    ports:
      - '9600:9600'
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/templates/:/usr/share/logstash/templates/
      - certs:/usr/share/logstash/config/certificates
    environment:
      - SLACK_ENDPOINT=${SLACK_ENDPOINT:-"undefined"}
      - INDICES_TEMPORAL_PATTERN=${INDICES_TEMPORAL_PATTERN}
      - ALERT_MESSAGE_LIGHT_REACHABLE=${ALERT_MESSAGE_LIGHT_REACHABLE}
      - ALERT_MESSAGE_LIGHT_NOT_REACHABLE=${ALERT_MESSAGE_LIGHT_NOT_REACHABLE}
      - ALERT_MESSAGE_LIGHT_ON=${ALERT_MESSAGE_LIGHT_ON}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    networks:
      - 'elk'
    depends_on:
      - elasticsearch01
      - elasticsearch02

networks: {elk: {}}
volumes: {"certs"}